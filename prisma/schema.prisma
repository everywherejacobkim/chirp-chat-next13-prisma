generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(auto()) @db.ObjectId @map("_id")
  name            String?
  username        String?   @unique
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  profileImage    String?
  coverImage      String?
  hashedPassword  String?
  followingIds    String[] @db.ObjectId
  hasNotification Boolean? 
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  posts           Post[]
  comments        Comment[]
  notifications   Notification[]
}

model Post {
  id        String   @id @default(auto()) @db.ObjectId @map("_id")
  body      String
  userId    String  @db.ObjectId
  likedIds  String[] @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments  Comment[]
}

model Comment {
  id        String   @id @default(auto()) @db.ObjectId @map("_id")
  body      String
  userId    String   @db.ObjectId
  postId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notification {
  id        String   @id @default(auto()) @db.ObjectId @map("_id")
  body      String
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
